[{"/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/index.js":"1","/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/App.js":"2","/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/utils/PrivateRoute.js":"3","/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/components/TwilioVideos.jsx":"4","/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/components/Signin.jsx":"5","/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/components/Header/Header.jsx":"6","/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/components/LoginForm/LoginForm.jsx":"7","/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/components/RegistrationForm/RegistrationForm.jsx":"8","/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/components/Home/Home.jsx":"9","/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/components/AlertComponent/AlertComponent.jsx":"10","/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/constants/apiConstants.jsx":"11"},{"size":219,"mtime":1612528970820,"results":"12","hashOfConfig":"13"},{"size":3185,"mtime":1612528970816,"results":"14","hashOfConfig":"13"},{"size":547,"mtime":1612528970820,"results":"15","hashOfConfig":"13"},{"size":9459,"mtime":1612872327649,"results":"16","hashOfConfig":"13"},{"size":2390,"mtime":1612528970820,"results":"17","hashOfConfig":"13"},{"size":1702,"mtime":1612528970816,"results":"18","hashOfConfig":"13"},{"size":3548,"mtime":1612528970816,"results":"19","hashOfConfig":"13"},{"size":5189,"mtime":1612528970820,"results":"20","hashOfConfig":"13"},{"size":725,"mtime":1612528970816,"results":"21","hashOfConfig":"13"},{"size":979,"mtime":1612528970816,"results":"22","hashOfConfig":"13"},{"size":117,"mtime":1612528970820,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1esq0t4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/index.js",[],["50","51"],"/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/App.js",[],"/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/utils/PrivateRoute.js",[],"/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/components/TwilioVideos.jsx",[],"/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/components/Signin.jsx",["52"],"import React from \"react\";\nimport axios from \"axios\";\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from \"../constants/apiConstants\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Signin({ setToken, setName, setRoom, name, room }) {\n  const history = useHistory();\n  async function doSubmit(event) {\n    event.preventDefault();\n    const result = await axios.post(\n      \"https://video-conf-8400-dev.twil.io/video-token\",\n      {\n        identity: name,\n        room,\n      }\n    );\n    setToken(result.data);\n    console.log(\"Token Received is\", result.data);\n    redirectToCustomRoom(room);\n  }\n  const createRoom = async event => {\n    event.preventDefault();\n    const email = localStorage.getItem(\"email\");\n    const payload = { email: email };\n    const response = await axios.post(\n      API_BASE_URL + \"/user/getRoomId\",\n      payload\n    );\n    // console.log(response);\n    var fetchedRoom = response.data.roomId;\n    var fetchedName = response.data.name\n    console.log(room);\n\n    const result = await axios.post(\n      \"https://video-conf-8400-dev.twil.io/video-token\",\n      {\n        identity: fetchedName,\n        fetchedRoom,\n      }\n    );\n    setToken(result.data);\n    redirectToCustomRoom(fetchedRoom);\n    console.log(\"Token Received is\", result.data);\n  }\n\n  const redirectToCustomRoom = (roomId) => {\n    history.push({\n      pathname: '/room',\n      search: \"?\" + new URLSearchParams({roomId: roomId}).toString()\n    })\n  }\n\n  return (\n    <div style={{ width: \"50%\" }}>\n      <br />\n      <br />\n      <fieldset>\n        <form onSubmit={doSubmit}>\n          <label htmlFor=\"name\">\n            Name:\n            <input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </label>\n          <br />\n          <br />\n          <label htmlFor=\"room\">\n            Room:\n            <input\n              type=\"text\"\n              id=\"room\"\n              value={room}\n              onChange={(e) => setRoom(e.target.value)}\n            />\n          </label>\n          <br />\n          <br />\n          <button type=\"submit\">Join Room</button>\n        </form>\n      </fieldset>\n      <fieldset>\n        <form onSubmit={createRoom}>\n          <button type=\"submit\">Create Room</button>\n        </form>\n      </fieldset>\n    </div>\n  );\n}\nexport default Signin;","/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/components/Header/Header.jsx",[],"/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/components/LoginForm/LoginForm.jsx",["53"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./LoginForm.css\";\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from \"../../constants/apiConstants\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction LoginForm(props) {\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    successMessage: null,\n  });\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setState((prevState) => ({\n      ...prevState,\n      [id]: value,\n    }));\n  };\n\n  const handleSubmitClick = (e) => {\n    e.preventDefault();\n    const payload = {\n      email: state.email,\n      password: state.password,\n    };\n    axios\n      .post(API_BASE_URL + \"/user/login\", payload)\n      .then(function (response) {\n        console.log(response.status);\n        if (response.status === 200) {\n          setState((prevState) => ({\n            ...prevState,\n            successMessage: \"Login successful. Redirecting to home page..\",\n          }));\n          localStorage.setItem(ACCESS_TOKEN_NAME, response.data.token);\n          localStorage.setItem(\"email\", state.email);\n          redirectToRoom();\n          props.showError(null);\n        } else if (response.status === 204) {\n          props.showError(\"Email and password do not match\");\n        } else if (response.status === 403) {\n          props.showError(\"User doesn't exist with this email\");\n        } else {\n          props.showError(\"Something went wrong. Please try again.\")\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  const redirectToHome = () => {\n    props.updateTitle(\"Home\");\n    props.history.push(\"/home\");\n  };\n  const redirectToRoom = () => {\n    props.updateTitle(\"Room\");\n    props.history.push(\"/room\");\n  };\n  const redirectToRegister = () => {\n    props.history.push(\"/register\");\n    props.updateTitle(\"Register\");\n  };\n  return (\n    <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n      <form>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"email\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter email\"\n            value={state.email}\n            onChange={handleChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            We'll never share your email with anyone else.\n          </small>\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputPassword1\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            placeholder=\"Password\"\n            value={state.password}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-check\"></div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          onClick={handleSubmitClick}\n        >\n          Submit\n        </button>\n      </form>\n      <div\n        className=\"alert alert-success mt-2\"\n        style={{ display: state.successMessage ? \"block\" : \"none\" }}\n        role=\"alert\"\n      >\n        {state.successMessage}\n      </div>\n      <div className=\"registerMessage\">\n        <span>Dont have an account? </span>\n        <span className=\"loginText\" onClick={() => redirectToRegister()}>\n          Register\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(LoginForm);\n","/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/components/RegistrationForm/RegistrationForm.jsx",["54"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./RegistrationForm.css\";\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from \"../../constants/apiConstants\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction RegistrationForm(props) {\n  const [state, setState] = useState({\n    firstName: '',\n    lastName: '',\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    successMessage: null,\n  });\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setState((prevState) => ({\n      ...prevState,\n      [id]: value,\n    }));\n  };\n  const sendDetailsToServer = () => {\n    if (state.email.length && state.password.length) {\n      props.showError(null);\n      const payload = {\n        firstName: state.firstName,\n        lastName: state.lastName,\n        email: state.email,\n        password: state.password,\n      };\n      axios\n        .post(API_BASE_URL + \"/user/register\", payload)\n        .then(function (response) {\n          if (response.status === 200) {\n            setState((prevState) => ({\n              ...prevState,\n              successMessage:\n                \"Registration successful. Redirecting to home page..\",\n            }));\n            localStorage.setItem(ACCESS_TOKEN_NAME, response.data.token);\n            redirectToRoom();\n            props.showError(null);\n          } else if(response.status === 204) {\n            props.showError(\"User already exists with this email ID\");\n          }\n            else {\n            props.showError(\"Some error ocurred\");\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    } else {\n      props.showError(\"Please enter valid username and password\");\n    }\n  };\n  const redirectToHome = () => {\n    props.updateTitle(\"Home\");\n    props.history.push(\"/home\");\n  };\n  const redirectToRoom = () => {\n    props.updateTitle(\"Room\")\n    props.history.push(\"/room\");\n  }\n  const redirectToLogin = () => {\n    props.updateTitle(\"Login\");\n    props.history.push(\"/login\");\n  };\n  const handleSubmitClick = (e) => {\n    e.preventDefault();\n    console.log(`${state.firstName} ${state.lastName} ${state.email} ${state.password}`)\n    if (state.password === state.confirmPassword) {\n      sendDetailsToServer();\n    } else {\n      props.showError(\"Passwords do not match\");\n    }\n  };\n  return (\n    <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n      <form>\n        <div className=\"form-group text-left\" style={{marginTop: 10}}>\n          <label htmlFor=\"exampleInputFirstName1\">First Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"firstName\"\n            // aria-describedby=\"emailHelp\"\n            placeholder=\"Enter your first name\"\n            value={state.firstName}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputLastName1\">Last Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"lastName\"\n            // aria-describedby=\"emailHelp\"\n            placeholder=\"Enter your last name\"\n            value={state.lastName}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"email\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter email\"\n            value={state.email}\n            onChange={handleChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            We'll never share your email with anyone else.\n          </small>\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputPassword1\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            placeholder=\"Password\"\n            value={state.password}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"confirmPassword\"\n            placeholder=\"Confirm Password\"\n            value={state.confirmPassword}\n            onChange={handleChange}\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          onClick={handleSubmitClick}\n        >\n          Register\n        </button>\n      </form>\n      <div\n        className=\"alert alert-success mt-2\"\n        style={{ display: state.successMessage ? \"block\" : \"none\" }}\n        role=\"alert\"\n      >\n        {state.successMessage}\n      </div>\n      <div className=\"mt-2\">\n        <span>Already have an account? </span>\n        <span className=\"loginText\" onClick={() => redirectToLogin()}>\n          Login here\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(RegistrationForm);\n","/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/components/Home/Home.jsx",[],"/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/components/AlertComponent/AlertComponent.jsx",[],"/home/protik_thirdeye/TE-InterNalProject/video-conf/video_conf_react/src/constants/apiConstants.jsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":24,"nodeType":"61","messageId":"62","endLine":3,"endColumn":41},{"ruleId":"59","severity":1,"message":"63","line":52,"column":9,"nodeType":"61","messageId":"62","endLine":52,"endColumn":23},{"ruleId":"59","severity":1,"message":"63","line":58,"column":9,"nodeType":"61","messageId":"62","endLine":58,"endColumn":23},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'ACCESS_TOKEN_NAME' is defined but never used.","Identifier","unusedVar","'redirectToHome' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]