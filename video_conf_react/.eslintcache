[{"/home/soumyajit/Desktop/video_conf/video_conf_react/src/index.js":"1","/home/soumyajit/Desktop/video_conf/video_conf_react/src/App.js":"2","/home/soumyajit/Desktop/video_conf/video_conf_react/src/reportWebVitals.js":"3","/home/soumyajit/Desktop/video_conf/video_conf_react/src/components/Signin.jsx":"4","/home/soumyajit/Desktop/video_conf/video_conf_react/src/components/Header/Header.jsx":"5","/home/soumyajit/Desktop/video_conf/video_conf_react/src/components/RegistrationForm/RegistrationForm.jsx":"6","/home/soumyajit/Desktop/video_conf/video_conf_react/src/constants/apiConstants.jsx":"7","/home/soumyajit/Desktop/video_conf/video_conf_react/src/components/LoginForm/LoginForm.jsx":"8","/home/soumyajit/Desktop/video_conf/video_conf_react/src/components/AlertComponent/AlertComponent.jsx":"9","/home/soumyajit/Desktop/video_conf/video_conf_react/src/components/Home/Home.jsx":"10","/home/soumyajit/Desktop/video_conf/video_conf_react/src/utils/PrivateRoute.js":"11","/home/soumyajit/Desktop/video_conf/video_conf_react/src/components/TwilioVideos.jsx":"12"},{"size":219,"mtime":1611236743619,"results":"13","hashOfConfig":"14"},{"size":3189,"mtime":1611814645479,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611236404989,"results":"16","hashOfConfig":"17"},{"size":1208,"mtime":1611553232486,"results":"18","hashOfConfig":"14"},{"size":1702,"mtime":1611818433430,"results":"19","hashOfConfig":"14"},{"size":5189,"mtime":1611830936874,"results":"20","hashOfConfig":"14"},{"size":117,"mtime":1611556565657,"results":"21","hashOfConfig":"14"},{"size":3494,"mtime":1611896412763,"results":"22","hashOfConfig":"14"},{"size":979,"mtime":1611554569117,"results":"23","hashOfConfig":"14"},{"size":725,"mtime":1611827965134,"results":"24","hashOfConfig":"14"},{"size":547,"mtime":1611561431512,"results":"25","hashOfConfig":"14"},{"size":9300,"mtime":1611818428837,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1ofwmuu",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vpgg3p",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/home/soumyajit/Desktop/video_conf/video_conf_react/src/index.js",[],["53","54"],"/home/soumyajit/Desktop/video_conf/video_conf_react/src/App.js",[],"/home/soumyajit/Desktop/video_conf/video_conf_react/src/reportWebVitals.js",[],"/home/soumyajit/Desktop/video_conf/video_conf_react/src/components/Signin.jsx",[],"/home/soumyajit/Desktop/video_conf/video_conf_react/src/components/Header/Header.jsx",[],"/home/soumyajit/Desktop/video_conf/video_conf_react/src/components/RegistrationForm/RegistrationForm.jsx",["55"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./RegistrationForm.css\";\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from \"../../constants/apiConstants\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction RegistrationForm(props) {\n  const [state, setState] = useState({\n    firstName: '',\n    lastName: '',\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    successMessage: null,\n  });\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setState((prevState) => ({\n      ...prevState,\n      [id]: value,\n    }));\n  };\n  const sendDetailsToServer = () => {\n    if (state.email.length && state.password.length) {\n      props.showError(null);\n      const payload = {\n        firstName: state.firstName,\n        lastName: state.lastName,\n        email: state.email,\n        password: state.password,\n      };\n      axios\n        .post(API_BASE_URL + \"/user/register\", payload)\n        .then(function (response) {\n          if (response.status === 200) {\n            setState((prevState) => ({\n              ...prevState,\n              successMessage:\n                \"Registration successful. Redirecting to home page..\",\n            }));\n            localStorage.setItem(ACCESS_TOKEN_NAME, response.data.token);\n            redirectToRoom();\n            props.showError(null);\n          } else if(response.status === 204) {\n            props.showError(\"User already exists with this email ID\");\n          }\n            else {\n            props.showError(\"Some error ocurred\");\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    } else {\n      props.showError(\"Please enter valid username and password\");\n    }\n  };\n  const redirectToHome = () => {\n    props.updateTitle(\"Home\");\n    props.history.push(\"/home\");\n  };\n  const redirectToRoom = () => {\n    props.updateTitle(\"Room\")\n    props.history.push(\"/room\");\n  }\n  const redirectToLogin = () => {\n    props.updateTitle(\"Login\");\n    props.history.push(\"/login\");\n  };\n  const handleSubmitClick = (e) => {\n    e.preventDefault();\n    console.log(`${state.firstName} ${state.lastName} ${state.email} ${state.password}`)\n    if (state.password === state.confirmPassword) {\n      sendDetailsToServer();\n    } else {\n      props.showError(\"Passwords do not match\");\n    }\n  };\n  return (\n    <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n      <form>\n        <div className=\"form-group text-left\" style={{marginTop: 10}}>\n          <label htmlFor=\"exampleInputFirstName1\">First Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"firstName\"\n            // aria-describedby=\"emailHelp\"\n            placeholder=\"Enter your first name\"\n            value={state.firstName}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputLastName1\">Last Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"lastName\"\n            // aria-describedby=\"emailHelp\"\n            placeholder=\"Enter your last name\"\n            value={state.lastName}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"email\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter email\"\n            value={state.email}\n            onChange={handleChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            We'll never share your email with anyone else.\n          </small>\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputPassword1\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            placeholder=\"Password\"\n            value={state.password}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group text-left\">\n          <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"confirmPassword\"\n            placeholder=\"Confirm Password\"\n            value={state.confirmPassword}\n            onChange={handleChange}\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          onClick={handleSubmitClick}\n        >\n          Register\n        </button>\n      </form>\n      <div\n        className=\"alert alert-success mt-2\"\n        style={{ display: state.successMessage ? \"block\" : \"none\" }}\n        role=\"alert\"\n      >\n        {state.successMessage}\n      </div>\n      <div className=\"mt-2\">\n        <span>Already have an account? </span>\n        <span className=\"loginText\" onClick={() => redirectToLogin()}>\n          Login here\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(RegistrationForm);\n","/home/soumyajit/Desktop/video_conf/video_conf_react/src/constants/apiConstants.jsx",[],"/home/soumyajit/Desktop/video_conf/video_conf_react/src/components/LoginForm/LoginForm.jsx",["56"],"/home/soumyajit/Desktop/video_conf/video_conf_react/src/components/AlertComponent/AlertComponent.jsx",[],"/home/soumyajit/Desktop/video_conf/video_conf_react/src/components/Home/Home.jsx",[],"/home/soumyajit/Desktop/video_conf/video_conf_react/src/utils/PrivateRoute.js",[],"/home/soumyajit/Desktop/video_conf/video_conf_react/src/components/TwilioVideos.jsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":58,"column":9,"nodeType":"63","messageId":"64","endLine":58,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":51,"column":9,"nodeType":"63","messageId":"64","endLine":51,"endColumn":23},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'redirectToHome' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]